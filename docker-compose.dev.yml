version: "3.8"

services:
  # Frontend-Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - aegis-network

  # Backend-Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - /app/go/pkg/mod
    environment:
      - ENVIRONMENT=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=aegisuser
      - DB_PASSWORD=dev_password
      - DB_NAME=aegis_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - aegis-network

  # PostgreSQL mit TimescaleDB für Zeitreihendaten
  postgres:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=aegisuser
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=aegis_dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/db/migrations:/docker-entrypoint-initdb.d
    networks:
      - aegis-network

  # Redis für Caching und Pub/Sub
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - aegis-network

networks:
  aegis-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
